// –≤–æ—Ä–æ–±–µ–π –º–æ–π –ø—É–ø—Å
// Made by Letovsky for Secktor
const { cmd, marrynaxoi, sck1 } = require('../lib');

cmd({
  pattern: "createmarry",
  desc: "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –±—Ä–∞–∫–∞",
  category: "üë®‚Äçüë®‚Äçüëß –°–µ–º—å—è",
  users: true
}, async ({ Void, citel, users }) => {
  const a = await sck1.findOne({ id: citel.sender })
  const b = await sck1.findOne({ id: users })

  if (a.level < 16 || b.level < 16) return citel.reply('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –±—Ä–∞–∫,—Ç.–∫ —É –≤–∞—Å –∏–ª–∏ —É –≤–∞—à–µ–π –±—É–¥—É—â–µ–π –∂–µ–Ω—ã –Ω–µ—Ç—É 16-–æ–≥–æ —É—Ä–æ–≤–Ω—è:(')
  if (citel.sender === users) return await citel.reply(`*–¢—ã –Ω–µ –º–æ–∂–µ—à—å —Å–∞–º —Å–µ–±–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –±—Ä–∞–∫–∞*`);
  const checkinfo1 = await marrynaxoi.findOne({ id: users }) || await new marrynaxoi({ id: users }).save();
  const checkinfo = await marrynaxoi.findOne({ id: citel.sender }) || await new marrynaxoi({ id: citel.sender }).save();
  if (checkinfo.status === "registered") return await citel.reply(`*–í—ã –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é —É–∂–µ –≤ –±—Ä–∞–∫–µ.*`);
  if (checkinfo.status === "init") return await citel.reply(`*–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –∑–∞–ø—Ä–æ—Å, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞... (–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å - .cancelmarry)*`);
  if (checkinfo1.status === "registered") return await Void.sendMessage(citel.chat, { text: `*@${users.split('@')[0]} —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –±—Ä–∞–∫–µ.*`, mentions: [citel.sender, users] }, { quoted: citel });
  if (checkinfo1.status === "init") return await citel.reply(`*–î–∞–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–º—É-—Ç–æ –∑–∞–ø—Ä–æ—Å, –ø–æ—ç—Ç–æ–º—É —Å –Ω–∏–º –Ω–µ–ª—å–∑—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –±—Ä–∞–∫*`);
  if (checkinfo.status === "alone") {
    await Promise.all([
      marrynaxoi.updateOne({ id: citel.sender }, { status: 'init', marrycreator: citel.sender, who: users }),
      marrynaxoi.updateOne({ id: users }, { status: 'init', marrycreator: citel.sender, who: citel.sender }),
    ]);
    const caption = `*–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, @${users.split('@')[0]}! –°–æ–≥–ª–∞—Å–Ω—ã –ª–∏ –≤—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –±—Ä–∞–∫ —Å @${citel.sender.split('@')[0]}? (–ü—Ä–∏–Ω—è—Ç—å - .acceptmarry)*`;
    await Void.sendMessage(citel.chat, { text: caption, mentions: [citel.sender, users] }, { quoted: citel });
  }
});

cmd({
  pattern: "acceptmarry",
  level: 16,
  desc: "–ø—Ä–∏–Ω—è—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –±—Ä–∞–∫–∞",
  category: "üë®‚Äçüë®‚Äçüëß –°–µ–º—å—è",
}, async ({ Void, citel }) => {
  const checkinfo = await marrynaxoi.findOne({ id: citel.sender }) || await new marrynaxoi({ id: citel.sender }).save();
  const a = await sck1.findOne({ id: citel.sender })
  const b = await sck1.findOne({ id: checkinfo.who })
  const allMsg = a.msg + b.msg
  if (checkinfo.marrycreator === citel.sender) return await citel.reply(`*–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –±—Ä–∞–∫, —Ç–∞–∫ –∫–∞–∫ —É –≤–∞—Å –µ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ*`);
  if (checkinfo.status === "registered") return await citel.reply(`*–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏ –±—Ä–∞–∫*`);
  if (checkinfo.status === "alone") return await citel.reply(`*–í–∞–º –Ω–∏–∫—Ç–æ –Ω–µ –ø—Ä–µ–¥–ª–∞–≥–∞–ª –≤—Å—Ç—É–ø–∏—Ç—å –≤ –±—Ä–∞–∫*`);
  if (checkinfo.status === "init") {
    await Promise.all([
      marrynaxoi.updateOne({ id: citel.sender }, { status: "registered" }),
      marrynaxoi.updateOne({ id: checkinfo.who }, { status: "registered" }),
      sck1.updateOne({ id: citel.sender }, { msg: allMsg }),
      sck1.updateOne({ id: checkinfo.who }, { msg: allMsg })
    ]);
    await citel.reply(`–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏ –±—Ä–∞–∫ *(.rank)*`);
  }
}
);

cmd({
  pattern: "rejectmarry",
  level: 16,
  desc: "–æ—Ç–∫–ª–∞–Ω–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –±—Ä–∞–∫–∞",
  category: "üë®‚Äçüë®‚Äçüëß –°–µ–º—å—è",
}, async ({ Void, citel }) => {
  const checkinfo = await marrynaxoi.findOne({ id: citel.sender }) || await new marrynaxoi({ id: citel.sender }).save();
  if (checkinfo.marrycreator === citel.sender) return await citel.reply(`*–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–∫–∞–∑–∞—Ç—å, —Ç–∞–∫ –∫–∞–∫ –≤—ã —Å–æ–∑–¥–∞–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ*`);
  if (checkinfo.status === "alone") return await citel.reply(`*–í—ã –Ω–µ –≤ –±—Ä–∞–∫–µ*`);
  if (checkinfo.status === "registered") return await citel.reply(`*–ë—Ä–∞–∫ –±—ã–ª —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω (–¥–ª—è —Ä–∞–∑–≤–æ–¥–∞ .stopmarry)*`);
  if (checkinfo.status === "init") {
    await Promise.all([
      marrynaxoi.updateOne({ id: checkinfo.who }, { status: 'alone', who: 'nope', marrycreator: 'nope' }),
      marrynaxoi.updateOne({ id: citel.sender }, { status: 'alone', who: 'nope', marrycreator: 'nope' }),
    ]);
    await citel.reply(`–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–∞–∑–∞–ª–∏ –Ω–∞ –∑–∞–ø—Ä–æ—Å –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –±—Ä–∞–∫–∞ *(.rank)*`);
  }
}
);

cmd({
  pattern: "stopmarry",
  desc: "—Ä–∞–∑–≤–µ—Å—Ç–∏—Å—å",
  level: 16,
  category: "üë®‚Äçüë®‚Äçüëß –°–µ–º—å—è",
}, async ({ Void, citel }) => {
  const a = await sck1.findOne({ id: citel.sender });
  const checkinfo = await marrynaxoi.findOne({ id: citel.sender }) || await new marrynaxoi({ id: citel.sender }).save();
  if (checkinfo.status === "alone") return await citel.reply(`*–í—ã –Ω–µ –≤ –±—Ä–∞–∫–µ*`);
  if (checkinfo.status === "init") return await citel.reply(`*–í–≤–µ–¥–∏—Ç–µ .cancelmarry –¥–ª—è –æ—Ç–º–µ–Ω—ã –∑–∞—è–≤–∫–∏ –Ω–∞ –±—Ä–∞–∫, –∏–ª–∏ .rejectmarry –¥–ª—è –æ—Ç–∫–∞–∑–∞ –Ω–∞ –∑–∞—è–≤–∫—É –Ω–∞ –±—Ä–∞–∫.*`);
  if (checkinfo.status === "registered") {
    const halfMsg = Math.floor(a.msg / 2);
    await Promise.all([
      marrynaxoi.updateOne({ id: checkinfo.who }, { status: 'alone', who: 'nope', marrycreator: 'nope' }),
      marrynaxoi.updateOne({ id: citel.sender }, { status: 'alone', who: 'nope', marrycreator: 'nope' }),
      sck1.updateOne({ id: citel.sender }, { msg: halfMsg }),
      sck1.updateOne({ id: checkinfo.who }, { msg: halfMsg })
    ]);
    await citel.reply(`*–í—ã —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ–ª–∏—Å—å* (.rank)`);
  }
}
);

cmd({
  pattern: "cancelmarry",
  category: "üë®‚Äçüë®‚Äçüëß –°–µ–º—å—è",
  level: 16,
  desc: "–æ—Ç–æ–∑–≤–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –±—Ä–∞–∫–∞"
}, async ({ Void, citel }) => {
  const checkinfo = await marrynaxoi.findOne({ id: citel.sender }) || await new marrynaxoi({ id: citel.sender }).save();
  if (checkinfo.status === "alone") return await citel.reply(`*–í—ã –Ω–µ –ø–æ–¥–∞–≤–∞–ª–∏ –∑–∞—è–≤–∫—É –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –±—Ä–∞–∫–∞*`);
  if (checkinfo.status === "registered") return await citel.reply(`*–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ *.stopmarry* –¥–ª—è —Ä–∞–∑–≤–æ–¥–∞*`);
  if (checkinfo.status === "init") {
    await Promise.all([
      marrynaxoi.updateOne({ id: checkinfo.who }, { status: 'alone', who: 'nope', marrycreator: 'nope' }),
      marrynaxoi.updateOne({ id: citel.sender }, { status: 'alone', who: 'nope', marrycreator: 'nope' }),
    ]);
    await citel.reply(`*–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–∏–ª–∏ –∑–∞—è–≤–∫—É*`);
  }
});